name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Pull rabbitmq image (optional)
        run: docker pull rabbitmq:3-management-alpine

      - name: Install Poetry
        run: pip install poetry==1.8.3

      - name: Install dependencies
        run: poetry install --only main,dev --no-interaction --no-ansi

      - name: Run Ruff linter
        run: poetry run ruff check .

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: user_db
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: db_microservice
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user_db -d db_microservice"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3-management-alpine
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmqctl status"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5

      otel-collector:
        image: otel/opentelemetry-collector-contrib:0.109.0
        ports:
          - 4317:4317
          - 4318:4318
          - 55681:55681
        volumes:
          - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
        options: >-
          --name otel-collector

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: pip install poetry==1.8.3

      - name: Install dependencies
        run: poetry install --only main,dev --no-interaction --no-ansi

      - name: Run tests
        env:
          DATABASE_URL: postgresql+asyncpg://user_db:pass@postgres:5432/db_microservice
          RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
        run: poetry run pytest tests/ --cov=app --cov-report=xml

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker-compose build app

      - name: Run Docker Compose
        run: |
          docker-compose up -d
          sleep 10 # Wait for services to be healthy
          docker-compose ps
          docker-compose down